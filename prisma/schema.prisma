// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id        String   @id @default(uuid())
  userId    String
  name      String
  balance   Float    @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  transactions Transaction[]

  userSettings UserSettings?
}


model Transaction {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  amount      Float
  description String
  date        DateTime
  type        String   @default("income")

  // ðŸ”‘ Relation to Account
  accountId   String
  account     Account  @relation(fields: [accountId], references: [id])

  // Category info
  category     String
  categoryIcon String

  userId      String
}


model Category {
  createdAt DateTime @default(now())
  name String
  userId String
  icon String
  type String @default("income")

  @@unique([name, userId, type, icon])
}


model UserSettings {
  userId String @id
  currency String
  
  accountId      String    @unique   // FK, each account can only be linked once
  defaultAccount Account   @relation(fields: [accountId], references: [id])
}


model MonthHistory {
  userId String
  day Int
  month Int
  year Int
  income Float
  expense Float

  @@id([day, month, year, userId])
}

model YearHistory {
  userId String
  month Int
  year Int
  income Float
  expense Float

  @@id([month, year, userId])
}